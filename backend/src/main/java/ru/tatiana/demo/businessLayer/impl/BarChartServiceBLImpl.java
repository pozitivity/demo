package ru.tatiana.demo.businessLayer.impl;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;import ru.tatiana.demo.businessLayer.BarChartServiceBL;import ru.tatiana.demo.service.impl.DiagnosisServiceImpl;import ru.tatiana.demo.model.BarChart;import ru.tatiana.demo.service.impl.PatientServiceImpl;import java.sql.Timestamp;import java.util.ArrayList;import java.util.Calendar;import java.util.List;/** * Created by Tatyana on 14.04.2016. */@Componentpublic class BarChartServiceBLImpl implements BarChartServiceBL {    @Autowired    DiagnosisServiceImpl diagnosisServiceImpl;    @Autowired    PatientServiceImpl patientServiceImpl;    @Override    public List<BarChart> getDataByMonth() {        List<BarChart> res = new ArrayList<>();//        Timestamp minDatein = removeHoursAndSetDay(patientServiceImpl.getMinDatein());//        Timestamp maxDatein = removeHoursAndSetDay(patientServiceImpl.getMaxDatein());////        while (minDatein.before(maxDatein)) {//            Timestamp next = minDatein;//            next = setMonthToTimestamp(next, getMonthFromTimestamp(minDatein) + 1);//            if (getMonthFromTimestamp(minDatein) == 12) {//                next = setYearToTimestamp(next, getYearFromTimestamp(minDatein) + 1);//                next = setMonthToTimestamp(next, 1);//            }//            Long patients = patientServiceImpl.getPatientsWithSameDatein(minDatein, next);//            BarChart prmd = new BarChart(getYearFromTimestamp(minDatein).longValue(),//                    getMonthFromTimestamp(minDatein).longValue() + 1, patients);//            minDatein = next;//            res.add(prmd);//        }        return res;    }    @Override    public List<BarChart> getDataByYear() {        List<BarChart> res = new ArrayList<>();//        Timestamp minDatein = removeHoursAndSetDay(patientServiceImpl.getMinDatein());//        Timestamp maxDatein = removeHoursAndSetDay(patientServiceImpl.getMaxDatein());//        minDatein = setMonthToTimestamp(minDatein, 0);////        while (minDatein.before(maxDatein)) {//            Timestamp next = minDatein;//            next = setYearToTimestamp(next, getYearFromTimestamp(minDatein) + 1);//            Long patients = patientServiceImpl.getPatientsWithSameDatein(minDatein, next);//            BarChart prmd = new BarChart(getYearFromTimestamp(minDatein).longValue(), 1L, patients);//            minDatein = next;//            res.add(prmd);//        }        return res;    }    private Timestamp setMonthToTimestamp(Timestamp ts, int month) {        Calendar cal = Calendar.getInstance();        cal.setTime(ts);        cal.set(Calendar.MONTH, month);        return new Timestamp(cal.getTimeInMillis());    }    private Integer getMonthFromTimestamp(Timestamp ts) {        Calendar cal = Calendar.getInstance();        cal.setTime(ts);        return cal.get(Calendar.MONTH);    }    private Integer getYearFromTimestamp(Timestamp ts) {        Calendar cal = Calendar.getInstance();        cal.setTime(ts);        return cal.get(Calendar.YEAR);    }    private Timestamp setYearToTimestamp(Timestamp ts, int year) {        Calendar cal = Calendar.getInstance();        cal.setTime(ts);        cal.set(Calendar.YEAR, year);        return new Timestamp(cal.getTimeInMillis());    }    private Timestamp removeHoursAndSetDay(Timestamp ts) {        Calendar cal = Calendar.getInstance();        cal.setTime(ts);        cal.set(Calendar.HOUR, 0);        cal.set(Calendar.MINUTE, 0);        cal.set(Calendar.SECOND, 0);        cal.set(Calendar.MILLISECOND, 0);        cal.set(Calendar.DATE, 1);        return new Timestamp(cal.getTimeInMillis());    }}